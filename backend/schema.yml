openapi: 3.0.3
info:
  title: Good Food API
  version: v1
  description: API documentation for the GoodFood project
paths:
  /api/categories/:
    get:
      operationId: categories_list
      description: Viewset for categories.
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      description: Viewset for categories.
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreate'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreate'
          description: ''
    delete:
      operationId: categories_destroy
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/components/:
    get:
      operationId: components_list
      description: Viewset for components.
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
          description: ''
    post:
      operationId: components_create
      description: Viewset for components.
      tags:
      - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/components/{id}/:
    get:
      operationId: components_retrieve
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
    patch:
      operationId: components_partial_update
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
    delete:
      operationId: components_destroy
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/favorite-products/:
    get:
      operationId: favorite_products_list
      description: Viewset for viewing useres' favorite products by admins.
      tags:
      - favorite-products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProductsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteProduct'
          description: ''
  /api/favorite-products/{id}/:
    get:
      operationId: favorite_products_retrieve
      description: Viewset for viewing useres' favorite products by admins.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Favorite Product.
        required: true
      tags:
      - favorite-products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProductsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProduct'
          description: ''
  /api/order/:
    get:
      operationId: order_list
      description: Viewset for Order.
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderList'
          description: ''
    post:
      operationId: order_create
      description: Viewset for Order.
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPostDelete'
          description: ''
  /api/order/{id}/:
    get:
      operationId: order_retrieve
      description: Viewset for Order.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: ''
    delete:
      operationId: order_destroy
      description: Viewset for Order.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - order
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/producers/:
    get:
      operationId: producers_list
      description: Viewset for producers.
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducersListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producer'
          description: ''
    post:
      operationId: producers_create
      description: Viewset for producers.
      tags:
      - producers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducersCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
  /api/producers/{id}/:
    get:
      operationId: producers_retrieve
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducersRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
    patch:
      operationId: producers_partial_update
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducersPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
    delete:
      operationId: producers_destroy
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducersDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      description: Viewset for products.
      parameters:
      - in: query
        name: category
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: components
        schema:
          type: array
          items:
            type: string
        description: Component slug
        explode: true
        style: form
      - in: query
        name: discontinued
        schema:
          type: boolean
      - in: query
        name: is_favorited
        schema:
          type: number
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: min_price
        schema:
          type: number
      - in: query
        name: name
        schema:
          type: array
          items:
            type: string
        description: Product name
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: producer
        schema:
          type: array
          items:
            type: string
        description: Producer slug
        explode: true
        style: form
      - in: query
        name: promotions
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: subcategory
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
        description: Tag slug
        explode: true
        style: form
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: Viewset for products.
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      description: Increments the views_number field when someone views this product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdate'
          description: ''
    delete:
      operationId: products_destroy
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/products/{id}/favorite/:
    post:
      operationId: products_favorite_create
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsFavoriteCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProductCreate'
          description: ''
    delete:
      operationId: products_favorite_destroy
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsFavoriteDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/promotions/:
    get:
      operationId: promotions_list
      description: Viewset for promotions.
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
          description: ''
    post:
      operationId: promotions_create
      description: Viewset for promotions.
      tags:
      - promotions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
  /api/promotions/{id}/:
    get:
      operationId: promotions_retrieve
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    patch:
      operationId: promotions_partial_update
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    delete:
      operationId: promotions_destroy
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/shopping_cart/:
    get:
      operationId: shopping_cart_list
      description: Viewset for ShoppingCart.
      tags:
      - shopping_cart
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCart'
          description: ''
    post:
      operationId: shopping_cart_create
      description: Viewset for ShoppingCart.
      tags:
      - shopping_cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /api/shopping_cart/{id}/:
    delete:
      operationId: shopping_cart_destroy
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Корзина.
        required: true
      tags:
      - shopping_cart
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/subcategories/:
    get:
      operationId: subcategories_list
      description: Viewset for subcategories.
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcategoriesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
          description: ''
    post:
      operationId: subcategories_create
      description: Viewset for subcategories.
      tags:
      - subcategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcategoriesCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
  /api/subcategories/{id}/:
    get:
      operationId: subcategories_retrieve
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcategoriesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    patch:
      operationId: subcategories_partial_update
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcategoriesPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    delete:
      operationId: subcategories_destroy
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubcategoriesDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/tags/:
    get:
      operationId: tags_list
      description: Viewset for tags.
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      description: Viewset for tags.
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: tags_retrieve
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/token/login/:
    post:
      operationId: token_login_create
      description: Corrects /token/login/ response display in dynamic API docs.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLoginCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/token/logout/:
    post:
      operationId: token_logout_create
      description: Corrects /token/logout/ response display in dynamic API docs.
      tags:
      - token
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLogoutCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/users/{user_id}/addresses/:
    get:
      operationId: users_addresses_list
      description: Viewset for addresses.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddressesListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
  /api/users/{user_id}/addresses/{id}/:
    get:
      operationId: users_addresses_retrieve
      description: Viewset for addresses.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAddressesRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Страница не найдена.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/users/activation/:
    post:
      operationId: users_activation_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivationCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMeRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_me_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMeUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_me_partial_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMePartialUpdateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_me_destroy
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMeDestroyErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/users/resend_activation/:
    post:
      operationId: users_resend_activation_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResendActivationCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_password/:
    post:
      operationId: users_reset_password_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResetPasswordCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResetPasswordConfirmCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/users/reset_username/:
    post:
      operationId: users_reset_username_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResetUsernameCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_username_confirm/:
    post:
      operationId: users_reset_username_confirm_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResetUsernameConfirmCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/users/set_password/:
    post:
      operationId: users_set_password_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSetPasswordCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/users/set_username/:
    post:
      operationId: users_set_username_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSetUsernameCreateErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Некорректные учетные данные.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Учетные данные не были предоставлены.
                      attr: null
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse403'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: У вас недостаточно прав для выполнения данного действия.
                      attr: null
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse405'
              examples:
                MethodNotAllowed:
                  value:
                    type: client_error
                    errors:
                    - code: method_not_allowed
                      detail: Метод "get" не разрешен.
                      attr: null
          description: ''
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse406'
              examples:
                NotAcceptable:
                  value:
                    type: client_error
                    errors:
                    - code: not_acceptable
                      detail: Невозможно удовлетворить "Accept" заголовок запроса.
                      attr: null
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse415'
              examples:
                UnsupportedMediaType:
                  value:
                    type: client_error
                    errors:
                    - code: unsupported_media_type
                      detail: Неподдерживаемый тип данных "application/json" в запросе.
                      attr: null
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'
              examples:
                APIException:
                  value:
                    type: server_error
                    errors:
                    - code: error
                      detail: Ошибка сервера.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    Address:
      type: object
      description: Serializer for addresses representation.
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
        priority_address:
          type: boolean
          title: Priority
      required:
      - address
      - id
    AddressRequest:
      type: object
      description: Serializer for addresses representation.
      properties:
        address:
          type: string
          minLength: 1
        priority_address:
          type: boolean
          title: Priority
      required:
      - address
    CategoriesCreateCategoryNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - category_name
          type: string
          description: '* `category_name` - category_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesCreateError:
      oneOf:
      - $ref: '#/components/schemas/CategoriesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CategoriesCreateCategoryNameErrorComponent'
      - $ref: '#/components/schemas/CategoriesCreateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CategoriesCreateNonFieldErrorsErrorComponent'
          category_name: '#/components/schemas/CategoriesCreateCategoryNameErrorComponent'
          slug: '#/components/schemas/CategoriesCreateSlugErrorComponent'
    CategoriesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CategoriesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CategoriesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CategoriesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesCreateError'
      required:
      - errors
      - type
    CategoriesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CategoriesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    CategoriesPartialUpdateCategoryNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - category_name
          type: string
          description: '* `category_name` - category_name'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/CategoriesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CategoriesPartialUpdateCategoryNameErrorComponent'
      - $ref: '#/components/schemas/CategoriesPartialUpdateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CategoriesPartialUpdateNonFieldErrorsErrorComponent'
          category_name: '#/components/schemas/CategoriesPartialUpdateCategoryNameErrorComponent'
          slug: '#/components/schemas/CategoriesPartialUpdateSlugErrorComponent'
    CategoriesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CategoriesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CategoriesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CategoriesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CategoriesPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesPartialUpdateError'
      required:
      - errors
      - type
    CategoriesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Category:
      type: object
      description: Serializer for displaying categories.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SubcategoryLight'
        top_three_products:
          type: string
          readOnly: true
      required:
      - id
      - name
      - top_three_products
    CategoryCreate:
      type: object
      description: Serializer for creating categories.
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - category_name
      - id
    CategoryCreateRequest:
      type: object
      description: Serializer for creating categories.
      properties:
        category_name:
          type: string
          minLength: 1
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - category_name
    CategoryLight:
      type: object
      description: Serializer for categories representation in product serializer.
      properties:
        category_name:
          type: string
        category_slug:
          type: string
      required:
      - category_name
      - category_slug
    CityEnum:
      enum:
      - Moscow
      type: string
    ClientErrorEnum:
      enum:
      - client_error
      type: string
    Component:
      type: object
      description: Serializer for components representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    ComponentLight:
      type: object
      description: Serializer for components representation in product serializer.
      properties:
        component_name:
          type: string
        component_slug:
          type: string
      required:
      - component_name
      - component_slug
    ComponentRequest:
      type: object
      description: Serializer for components representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    ComponentsCreateError:
      oneOf:
      - $ref: '#/components/schemas/ComponentsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ComponentsCreateNameErrorComponent'
      - $ref: '#/components/schemas/ComponentsCreateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ComponentsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ComponentsCreateNameErrorComponent'
          slug: '#/components/schemas/ComponentsCreateSlugErrorComponent'
    ComponentsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ComponentsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ComponentsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ComponentsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ComponentsCreateError'
      required:
      - errors
      - type
    ComponentsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ComponentsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ComponentsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ComponentsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ComponentsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/ComponentsPartialUpdateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ComponentsPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ComponentsPartialUpdateNameErrorComponent'
          slug: '#/components/schemas/ComponentsPartialUpdateSlugErrorComponent'
    ComponentsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ComponentsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ComponentsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ComponentsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ComponentsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ComponentsPartialUpdateError'
      required:
      - errors
      - type
    ComponentsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    DeliveryMethodEnum:
      enum:
      - Point of delivery
      - By courier
      type: string
    Error401:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode401Enum'
          description: |-
            * `authentication_failed` - Authentication Failed
            * `not_authenticated` - Not Authenticated
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error403:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode403Enum'
          description: '* `permission_denied` - Permission Denied'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode404Enum'
          description: '* `not_found` - Not Found'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error405:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode405Enum'
          description: '* `method_not_allowed` - Method Not Allowed'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error406:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode406Enum'
          description: '* `not_acceptable` - Not Acceptable'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error415:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode415Enum'
          description: '* `unsupported_media_type` - Unsupported Media Type'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error500:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode500Enum'
          description: '* `error` - Error'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
    ErrorCode403Enum:
      enum:
      - permission_denied
      type: string
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
    ErrorCode405Enum:
      enum:
      - method_not_allowed
      type: string
    ErrorCode406Enum:
      enum:
      - not_acceptable
      type: string
    ErrorCode415Enum:
      enum:
      - unsupported_media_type
      type: string
    ErrorCode500Enum:
      enum:
      - error
      type: string
    ErrorResponse401:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse403:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error403'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse405:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error405'
      required:
      - errors
      - type
    ErrorResponse406:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error406'
      required:
      - errors
      - type
    ErrorResponse415:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error415'
      required:
      - errors
      - type
    ErrorResponse500:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ServerErrorEnum'
          description: '* `server_error` - Server Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error500'
      required:
      - errors
      - type
    FavoriteProduct:
      type: object
      description: Serializer for favorite products list representation.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserLight'
        product:
          $ref: '#/components/schemas/ProductLight'
      required:
      - id
      - product
      - user
    FavoriteProductCreate:
      type: object
      description: Serializer for creation favorite products.
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    FavoriteProductsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    FavoriteProductsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    MeasureUnitEnum:
      enum:
      - grams
      - milliliters
      - items
      type: string
    OrderCreateAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - address
          type: string
          description: '* `address` - address'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreateCommentErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - comment
          type: string
          description: '* `comment` - comment'
        code:
          enum:
          - invalid
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreateDeliveryMethodErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - delivery_method
          type: string
          description: '* `delivery_method` - delivery_method'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreateDeliveryPointErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - delivery_point
          type: string
          description: '* `delivery_point` - delivery_point'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreateError:
      oneOf:
      - $ref: '#/components/schemas/OrderCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/OrderCreatePaymentMethodErrorComponent'
      - $ref: '#/components/schemas/OrderCreateDeliveryMethodErrorComponent'
      - $ref: '#/components/schemas/OrderCreateDeliveryPointErrorComponent'
      - $ref: '#/components/schemas/OrderCreatePackageErrorComponent'
      - $ref: '#/components/schemas/OrderCreateCommentErrorComponent'
      - $ref: '#/components/schemas/OrderCreateAddressErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/OrderCreateNonFieldErrorsErrorComponent'
          payment_method: '#/components/schemas/OrderCreatePaymentMethodErrorComponent'
          delivery_method: '#/components/schemas/OrderCreateDeliveryMethodErrorComponent'
          delivery_point: '#/components/schemas/OrderCreateDeliveryPointErrorComponent'
          package: '#/components/schemas/OrderCreatePackageErrorComponent'
          comment: '#/components/schemas/OrderCreateCommentErrorComponent'
          address: '#/components/schemas/OrderCreateAddressErrorComponent'
    OrderCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/OrderCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/OrderCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    OrderCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreatePackageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - package
          type: string
          description: '* `package` - package'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreatePaymentMethodErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - payment_method
          type: string
          description: '* `payment_method` - payment_method'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    OrderCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/OrderCreateError'
      required:
      - errors
      - type
    OrderDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    OrderList:
      type: object
      description: Serializer for order representation.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserPresent'
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
        order_number:
          type: integer
          readOnly: true
        ordering_date:
          type: string
          format: date-time
          readOnly: true
          title: DateTime
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            * `Ordered` - Оформлен
            * `In processing` - В обработке
            * `Collecting` - Комплектуется
            * `Gathered` - Собран
            * `In delivering` - Передан в доставку
            * `Delivered` - Доставлен
            * `Completed` - Завершен
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        is_paid:
          type: boolean
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        address:
          type: string
          readOnly: true
        delivery_point:
          type: string
          readOnly: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        total_price:
          type: number
          format: double
          readOnly: true
      required:
      - address
      - delivery_point
      - id
      - order_number
      - ordering_date
      - products
      - total_price
      - user
    OrderListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    OrderPostDelete:
      type: object
      description: Serializer for create/update/delete order.
      properties:
        products:
          type: array
          items:
            type: integer
            title: Продукты в заказе
          readOnly: true
          title: Продукты в заказе
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        delivery_point:
          type: integer
          nullable: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        address:
          type: integer
          nullable: true
          title: User's address
      required:
      - products
    OrderPostDeleteRequest:
      type: object
      description: Serializer for create/update/delete order.
      properties:
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        delivery_point:
          type: integer
          nullable: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        address:
          type: integer
          nullable: true
          title: User's address
    OrderProduct:
      type: object
      description: Serializer for add/update/delete products into shopping_cart.
      properties:
        id:
          type: integer
        quantity:
          type: integer
      required:
      - id
      - quantity
    OrderProductRequest:
      type: object
      description: Serializer for add/update/delete products into shopping_cart.
      properties:
        id:
          type: integer
        quantity:
          type: integer
      required:
      - id
      - quantity
    OrderRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ParseError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ParseErrorCodeEnum'
          description: '* `parse_error` - Parse Error'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
    ParseErrorResponse:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ClientErrorEnum'
          description: '* `client_error` - Client Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PasswordResetConfirmRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - token
      - uid
    PatchedCategoryCreateRequest:
      type: object
      description: Serializer for creating categories.
      properties:
        category_name:
          type: string
          minLength: 1
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedComponentRequest:
      type: object
      description: Serializer for components representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedProducerRequest:
      type: object
      description: Serializer for produsers representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          minLength: 1
          description: Legal address of the producers
    PatchedProductUpdateRequest:
      type: object
      description: Serializer for updating products.
      properties:
        name:
          type: string
          minLength: 1
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          minimum: 1
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        promotions:
          type: array
          items:
            type: integer
        photo:
          type: string
          format: binary
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: number
          format: double
          minimum: 0
          description: Number of proteins per 100 g of product
        fats:
          type: number
          format: double
          minimum: 0
          description: Number of fats per 100 g of product
        carbohydrates:
          type: number
          format: double
          minimum: 0
          description: Number of carbohydrates per 100 g of product
    PatchedPromotionRequest:
      type: object
      description: Serializer for promotions representation.
      properties:
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          minLength: 1
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
    PatchedSubcategoryRequest:
      type: object
      description: Serializer for subcategories representation.
      properties:
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedTagRequest:
      type: object
      description: Serializer for tags representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedUserRequest:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          minLength: 1
          description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
        phone_number:
          type: string
          pattern: ^(\+7|7|8)\d{10}$
          maxLength: 17
        photo:
          type: string
          format: binary
    PaymentMethodEnum:
      enum:
      - Payment at the point of delivery
      - In getting by cash
      type: string
    Producer:
      type: object
      description: Serializer for produsers representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          description: Legal address of the producers
      required:
      - address
      - id
      - name
    ProducerLight:
      type: object
      description: Serializer for produsers representation in product serializer.
      properties:
        producer_name:
          type: string
        producer_slug:
          type: string
      required:
      - producer_name
      - producer_slug
    ProducerRequest:
      type: object
      description: Serializer for produsers representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          minLength: 1
          description: Legal address of the producers
      required:
      - address
      - name
    ProducerTypeEnum:
      enum:
      - company
      - entrepreneur
      type: string
    ProducersCreateAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - address
          type: string
          description: '* `address` - address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateError:
      oneOf:
      - $ref: '#/components/schemas/ProducersCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProducersCreateNameErrorComponent'
      - $ref: '#/components/schemas/ProducersCreateSlugErrorComponent'
      - $ref: '#/components/schemas/ProducersCreateProducerTypeErrorComponent'
      - $ref: '#/components/schemas/ProducersCreateDescriptionErrorComponent'
      - $ref: '#/components/schemas/ProducersCreateAddressErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProducersCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ProducersCreateNameErrorComponent'
          slug: '#/components/schemas/ProducersCreateSlugErrorComponent'
          producer_type: '#/components/schemas/ProducersCreateProducerTypeErrorComponent'
          description: '#/components/schemas/ProducersCreateDescriptionErrorComponent'
          address: '#/components/schemas/ProducersCreateAddressErrorComponent'
    ProducersCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProducersCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProducersCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProducersCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateProducerTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - producer_type
          type: string
          description: '* `producer_type` - producer_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProducersCreateError'
      required:
      - errors
      - type
    ProducersDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProducersListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProducersPartialUpdateAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - address
          type: string
          description: '* `address` - address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ProducersPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProducersPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/ProducersPartialUpdateSlugErrorComponent'
      - $ref: '#/components/schemas/ProducersPartialUpdateProducerTypeErrorComponent'
      - $ref: '#/components/schemas/ProducersPartialUpdateDescriptionErrorComponent'
      - $ref: '#/components/schemas/ProducersPartialUpdateAddressErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProducersPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ProducersPartialUpdateNameErrorComponent'
          slug: '#/components/schemas/ProducersPartialUpdateSlugErrorComponent'
          producer_type: '#/components/schemas/ProducersPartialUpdateProducerTypeErrorComponent'
          description: '#/components/schemas/ProducersPartialUpdateDescriptionErrorComponent'
          address: '#/components/schemas/ProducersPartialUpdateAddressErrorComponent'
    ProducersPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProducersPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProducersPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProducersPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateProducerTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - producer_type
          type: string
          description: '* `producer_type` - producer_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProducersPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProducersPartialUpdateError'
      required:
      - errors
      - type
    ProducersRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Product:
      type: object
      description: Serializer for displaying products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryLight'
          readOnly: true
        subcategory:
          $ref: '#/components/schemas/SubcategoryLight'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagLight'
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          $ref: '#/components/schemas/ProducerLight'
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          minimum: 1
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/PromotionLight'
        promotion_quantity:
          type: integer
          readOnly: true
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            $ref: '#/components/schemas/ComponentLight'
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: number
          format: double
          minimum: 0
          description: Number of proteins per 100 g of product
        fats:
          type: number
          format: double
          minimum: 0
          description: Number of fats per 100 g of product
        carbohydrates:
          type: number
          format: double
          minimum: 0
          description: Number of carbohydrates per 100 g of product
        views_number:
          type: integer
          description: Number of product page views
        orders_number:
          type: integer
          description: Number of orders for this product
        is_favorited:
          type: boolean
          readOnly: true
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - is_favorited
      - kcal
      - name
      - price
      - producer
      - promotion_quantity
      - proteins
      - subcategory
    ProductCreate:
      type: object
      description: Serializer for creating products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          type: integer
          readOnly: true
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          minimum: 1
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: number
          format: double
          minimum: 0
          description: Number of proteins per 100 g of product
        fats:
          type: number
          format: double
          minimum: 0
          description: Number of fats per 100 g of product
        carbohydrates:
          type: number
          format: double
          minimum: 0
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - kcal
      - name
      - price
      - producer
      - proteins
      - subcategory
    ProductCreateRequest:
      type: object
      description: Serializer for creating products.
      properties:
        name:
          type: string
          minLength: 1
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          minimum: 1
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        photo:
          type: string
          format: binary
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: number
          format: double
          minimum: 0
          description: Number of proteins per 100 g of product
        fats:
          type: number
          format: double
          minimum: 0
          description: Number of fats per 100 g of product
        carbohydrates:
          type: number
          format: double
          minimum: 0
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - components
      - fats
      - kcal
      - name
      - price
      - producer
      - proteins
      - subcategory
    ProductLight:
      type: object
      description: Serializer for products representation in favorite product serializer.
      properties:
        name:
          type: string
          description: Product name
          maxLength: 100
      required:
      - name
    ProductUpdate:
      type: object
      description: Serializer for updating products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          type: integer
          readOnly: true
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          minimum: 1
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        promotions:
          type: array
          items:
            type: integer
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: number
          format: double
          minimum: 0
          description: Number of proteins per 100 g of product
        fats:
          type: number
          format: double
          minimum: 0
          description: Number of fats per 100 g of product
        carbohydrates:
          type: number
          format: double
          minimum: 0
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - kcal
      - name
      - price
      - producer
      - promotions
      - proteins
      - subcategory
    ProductsCreateAmountErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - amount
          type: string
          description: '* `amount` - amount'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateCarbohydratesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - carbohydrates
          type: string
          description: '* `carbohydrates` - carbohydrates'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateComponentsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - components
          type: string
          description: '* `components` - components'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateDiscontinuedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - discontinued
          type: string
          description: '* `discontinued` - discontinued'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateError:
      oneOf:
      - $ref: '#/components/schemas/ProductsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateNameErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateDescriptionErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateSubcategoryErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateTagsErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateDiscontinuedErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateProducerErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateMeasureUnitErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateAmountErrorComponent'
      - $ref: '#/components/schemas/ProductsCreatePriceErrorComponent'
      - $ref: '#/components/schemas/ProductsCreatePhotoErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateComponentsErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateKcalErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateProteinsErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateFatsErrorComponent'
      - $ref: '#/components/schemas/ProductsCreateCarbohydratesErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProductsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ProductsCreateNameErrorComponent'
          description: '#/components/schemas/ProductsCreateDescriptionErrorComponent'
          subcategory: '#/components/schemas/ProductsCreateSubcategoryErrorComponent'
          tags: '#/components/schemas/ProductsCreateTagsErrorComponent'
          discontinued: '#/components/schemas/ProductsCreateDiscontinuedErrorComponent'
          producer: '#/components/schemas/ProductsCreateProducerErrorComponent'
          measure_unit: '#/components/schemas/ProductsCreateMeasureUnitErrorComponent'
          amount: '#/components/schemas/ProductsCreateAmountErrorComponent'
          price: '#/components/schemas/ProductsCreatePriceErrorComponent'
          photo: '#/components/schemas/ProductsCreatePhotoErrorComponent'
          components: '#/components/schemas/ProductsCreateComponentsErrorComponent'
          kcal: '#/components/schemas/ProductsCreateKcalErrorComponent'
          proteins: '#/components/schemas/ProductsCreateProteinsErrorComponent'
          fats: '#/components/schemas/ProductsCreateFatsErrorComponent'
          carbohydrates: '#/components/schemas/ProductsCreateCarbohydratesErrorComponent'
    ProductsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProductsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProductsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsCreateFatsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fats
          type: string
          description: '* `fats` - fats'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateKcalErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - kcal
          type: string
          description: '* `kcal` - kcal'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateMeasureUnitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - measure_unit
          type: string
          description: '* `measure_unit` - measure_unit'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreatePriceErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - price
          type: string
          description: '* `price` - price'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateProducerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - producer
          type: string
          description: '* `producer` - producer'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateProteinsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - proteins
          type: string
          description: '* `proteins` - proteins'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateSubcategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - subcategory
          type: string
          description: '* `subcategory` - subcategory'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateTagsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - tags
          type: string
          description: '* `tags` - tags'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProductsCreateError'
      required:
      - errors
      - type
    ProductsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsFavoriteCreateError:
      oneOf:
      - $ref: '#/components/schemas/ProductsFavoriteCreateNonFieldErrorsErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProductsFavoriteCreateNonFieldErrorsErrorComponent'
    ProductsFavoriteCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProductsFavoriteCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProductsFavoriteCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsFavoriteCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsFavoriteCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProductsFavoriteCreateError'
      required:
      - errors
      - type
    ProductsFavoriteDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsListCategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - category
          type: string
          description: '* `category` - category'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListComponentsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - components
          type: string
          description: '* `components` - components'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListError:
      oneOf:
      - $ref: '#/components/schemas/ProductsListNameErrorComponent'
      - $ref: '#/components/schemas/ProductsListCategoryErrorComponent'
      - $ref: '#/components/schemas/ProductsListSubcategoryErrorComponent'
      - $ref: '#/components/schemas/ProductsListProducerErrorComponent'
      - $ref: '#/components/schemas/ProductsListComponentsErrorComponent'
      - $ref: '#/components/schemas/ProductsListTagsErrorComponent'
      - $ref: '#/components/schemas/ProductsListPromotionsErrorComponent'
      - $ref: '#/components/schemas/ProductsListIsFavoritedErrorComponent'
      - $ref: '#/components/schemas/ProductsListMinPriceErrorComponent'
      - $ref: '#/components/schemas/ProductsListMaxPriceErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          name: '#/components/schemas/ProductsListNameErrorComponent'
          category: '#/components/schemas/ProductsListCategoryErrorComponent'
          subcategory: '#/components/schemas/ProductsListSubcategoryErrorComponent'
          producer: '#/components/schemas/ProductsListProducerErrorComponent'
          components: '#/components/schemas/ProductsListComponentsErrorComponent'
          tags: '#/components/schemas/ProductsListTagsErrorComponent'
          promotions: '#/components/schemas/ProductsListPromotionsErrorComponent'
          is_favorited: '#/components/schemas/ProductsListIsFavoritedErrorComponent'
          min_price: '#/components/schemas/ProductsListMinPriceErrorComponent'
          max_price: '#/components/schemas/ProductsListMaxPriceErrorComponent'
    ProductsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProductsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProductsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsListIsFavoritedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_favorited
          type: string
          description: '* `is_favorited` - is_favorited'
        code:
          enum:
          - invalid
          - max_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_value` - max_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListMaxPriceErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - max_price
          type: string
          description: '* `max_price` - max_price'
        code:
          enum:
          - invalid
          - max_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_value` - max_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListMinPriceErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - min_price
          type: string
          description: '* `min_price` - min_price'
        code:
          enum:
          - invalid
          - max_value
          type: string
          description: |-
            * `invalid` - invalid
            * `max_value` - max_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListProducerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - producer
          type: string
          description: '* `producer` - producer'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListPromotionsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - promotions
          type: string
          description: '* `promotions` - promotions'
        code:
          enum:
          - invalid_choice
          - invalid_list
          - invalid_pk_value
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
            * `invalid_pk_value` - invalid_pk_value
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListSubcategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - subcategory
          type: string
          description: '* `subcategory` - subcategory'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListTagsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - tags
          type: string
          description: '* `tags` - tags'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsListValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProductsListError'
      required:
      - errors
      - type
    ProductsPartialUpdateAmountErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - amount
          type: string
          description: '* `amount` - amount'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateCarbohydratesErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - carbohydrates
          type: string
          description: '* `carbohydrates` - carbohydrates'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateComponentsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - components
          type: string
          description: '* `components` - components'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateDiscontinuedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - discontinued
          type: string
          description: '* `discontinued` - discontinued'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/ProductsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateDescriptionErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateSubcategoryErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateTagsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateDiscontinuedErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateProducerErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateMeasureUnitErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateAmountErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdatePriceErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdatePromotionsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdatePhotoErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateComponentsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateKcalErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateProteinsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateFatsErrorComponent'
      - $ref: '#/components/schemas/ProductsPartialUpdateCarbohydratesErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ProductsPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/ProductsPartialUpdateNameErrorComponent'
          description: '#/components/schemas/ProductsPartialUpdateDescriptionErrorComponent'
          subcategory: '#/components/schemas/ProductsPartialUpdateSubcategoryErrorComponent'
          tags: '#/components/schemas/ProductsPartialUpdateTagsErrorComponent'
          discontinued: '#/components/schemas/ProductsPartialUpdateDiscontinuedErrorComponent'
          producer: '#/components/schemas/ProductsPartialUpdateProducerErrorComponent'
          measure_unit: '#/components/schemas/ProductsPartialUpdateMeasureUnitErrorComponent'
          amount: '#/components/schemas/ProductsPartialUpdateAmountErrorComponent'
          price: '#/components/schemas/ProductsPartialUpdatePriceErrorComponent'
          promotions: '#/components/schemas/ProductsPartialUpdatePromotionsErrorComponent'
          photo: '#/components/schemas/ProductsPartialUpdatePhotoErrorComponent'
          components: '#/components/schemas/ProductsPartialUpdateComponentsErrorComponent'
          kcal: '#/components/schemas/ProductsPartialUpdateKcalErrorComponent'
          proteins: '#/components/schemas/ProductsPartialUpdateProteinsErrorComponent'
          fats: '#/components/schemas/ProductsPartialUpdateFatsErrorComponent'
          carbohydrates: '#/components/schemas/ProductsPartialUpdateCarbohydratesErrorComponent'
    ProductsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProductsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProductsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProductsPartialUpdateFatsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - fats
          type: string
          description: '* `fats` - fats'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateKcalErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - kcal
          type: string
          description: '* `kcal` - kcal'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateMeasureUnitErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - measure_unit
          type: string
          description: '* `measure_unit` - measure_unit'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdatePriceErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - price
          type: string
          description: '* `price` - price'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateProducerErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - producer
          type: string
          description: '* `producer` - producer'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdatePromotionsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - promotions
          type: string
          description: '* `promotions` - promotions'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateProteinsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - proteins
          type: string
          description: '* `proteins` - proteins'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateSubcategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - subcategory
          type: string
          description: '* `subcategory` - subcategory'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateTagsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - tags
          type: string
          description: '* `tags` - tags'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProductsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProductsPartialUpdateError'
      required:
      - errors
      - type
    ProductsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Promotion:
      type: object
      description: Serializer for promotions representation.
      properties:
        id:
          type: integer
          readOnly: true
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
      required:
      - id
      - name
    PromotionLight:
      type: object
      description: Serializer for promotions representation in product serializer.
      properties:
        promotion_name:
          type: string
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
      required:
      - promotion_name
    PromotionRequest:
      type: object
      description: Serializer for promotions representation.
      properties:
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          minLength: 1
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
      required:
      - name
    PromotionTypeEnum:
      enum:
      - simple
      - birthday
      - loyalty_card
      - expired_soon
      - present
      - two_for_one
      - multiple_items
      type: string
    PromotionsCreateConditionsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - conditions
          type: string
          description: '* `conditions` - conditions'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateDiscountErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - discount
          type: string
          description: '* `discount` - discount'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateEndTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - end_time
          type: string
          description: '* `end_time` - end_time'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateError:
      oneOf:
      - $ref: '#/components/schemas/PromotionsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreatePromotionTypeErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateNameErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateDiscountErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateConditionsErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateIsActiveErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateIsConstantErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateStartTimeErrorComponent'
      - $ref: '#/components/schemas/PromotionsCreateEndTimeErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/PromotionsCreateNonFieldErrorsErrorComponent'
          promotion_type: '#/components/schemas/PromotionsCreatePromotionTypeErrorComponent'
          name: '#/components/schemas/PromotionsCreateNameErrorComponent'
          discount: '#/components/schemas/PromotionsCreateDiscountErrorComponent'
          conditions: '#/components/schemas/PromotionsCreateConditionsErrorComponent'
          is_active: '#/components/schemas/PromotionsCreateIsActiveErrorComponent'
          is_constant: '#/components/schemas/PromotionsCreateIsConstantErrorComponent'
          start_time: '#/components/schemas/PromotionsCreateStartTimeErrorComponent'
          end_time: '#/components/schemas/PromotionsCreateEndTimeErrorComponent'
    PromotionsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/PromotionsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/PromotionsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    PromotionsCreateIsActiveErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_active
          type: string
          description: '* `is_active` - is_active'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateIsConstantErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_constant
          type: string
          description: '* `is_constant` - is_constant'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreatePromotionTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - promotion_type
          type: string
          description: '* `promotion_type` - promotion_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateStartTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - start_time
          type: string
          description: '* `start_time` - start_time'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PromotionsCreateError'
      required:
      - errors
      - type
    PromotionsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PromotionsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PromotionsPartialUpdateConditionsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - conditions
          type: string
          description: '* `conditions` - conditions'
        code:
          enum:
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateDiscountErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - discount
          type: string
          description: '* `discount` - discount'
        code:
          enum:
          - invalid
          - max_string_length
          - max_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `max_value` - max_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateEndTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - end_time
          type: string
          description: '* `end_time` - end_time'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/PromotionsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdatePromotionTypeErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateDiscountErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateConditionsErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateIsActiveErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateIsConstantErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateStartTimeErrorComponent'
      - $ref: '#/components/schemas/PromotionsPartialUpdateEndTimeErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/PromotionsPartialUpdateNonFieldErrorsErrorComponent'
          promotion_type: '#/components/schemas/PromotionsPartialUpdatePromotionTypeErrorComponent'
          name: '#/components/schemas/PromotionsPartialUpdateNameErrorComponent'
          discount: '#/components/schemas/PromotionsPartialUpdateDiscountErrorComponent'
          conditions: '#/components/schemas/PromotionsPartialUpdateConditionsErrorComponent'
          is_active: '#/components/schemas/PromotionsPartialUpdateIsActiveErrorComponent'
          is_constant: '#/components/schemas/PromotionsPartialUpdateIsConstantErrorComponent'
          start_time: '#/components/schemas/PromotionsPartialUpdateStartTimeErrorComponent'
          end_time: '#/components/schemas/PromotionsPartialUpdateEndTimeErrorComponent'
    PromotionsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/PromotionsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/PromotionsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    PromotionsPartialUpdateIsActiveErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_active
          type: string
          description: '* `is_active` - is_active'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateIsConstantErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - is_constant
          type: string
          description: '* `is_constant` - is_constant'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdatePromotionTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - promotion_type
          type: string
          description: '* `promotion_type` - promotion_type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateStartTimeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - start_time
          type: string
          description: '* `start_time` - start_time'
        code:
          enum:
          - date
          - invalid
          - make_aware
          - overflow
          type: string
          description: |-
            * `date` - date
            * `invalid` - invalid
            * `make_aware` - make_aware
            * `overflow` - overflow
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    PromotionsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PromotionsPartialUpdateError'
      required:
      - errors
      - type
    PromotionsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    ServerErrorEnum:
      enum:
      - server_error
      type: string
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetPasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - current_password
      - new_email
    SetUsernameRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
      required:
      - current_password
      - new_email
    ShoppingCart:
      type: object
      description: Serializer for create/update/delete shopping_cart.
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
      required:
      - products
    ShoppingCartCreateError:
      oneOf:
      - $ref: '#/components/schemas/ShoppingCartCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ShoppingCartCreateProductsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ShoppingCartCreateProductsINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/ShoppingCartCreateProductsINDEXIdErrorComponent'
      - $ref: '#/components/schemas/ShoppingCartCreateProductsINDEXQuantityErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/ShoppingCartCreateNonFieldErrorsErrorComponent'
          products.non_field_errors: '#/components/schemas/ShoppingCartCreateProductsNonFieldErrorsErrorComponent'
          products.INDEX.non_field_errors: '#/components/schemas/ShoppingCartCreateProductsINDEXNonFieldErrorsErrorComponent'
          products.INDEX.id: '#/components/schemas/ShoppingCartCreateProductsINDEXIdErrorComponent'
          products.INDEX.quantity: '#/components/schemas/ShoppingCartCreateProductsINDEXQuantityErrorComponent'
    ShoppingCartCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ShoppingCartCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ShoppingCartCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ShoppingCartCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ShoppingCartCreateProductsINDEXIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - products.INDEX.id
          type: string
          description: '* `products.INDEX.id` - products.INDEX.id'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ShoppingCartCreateProductsINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - products.INDEX.non_field_errors
          type: string
          description: '* `products.INDEX.non_field_errors` - products.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ShoppingCartCreateProductsINDEXQuantityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - products.INDEX.quantity
          type: string
          description: '* `products.INDEX.quantity` - products.INDEX.quantity'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ShoppingCartCreateProductsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - products.non_field_errors
          type: string
          description: '* `products.non_field_errors` - products.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          - required
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ShoppingCartCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartCreateError'
      required:
      - errors
      - type
    ShoppingCartDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ShoppingCartListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ShoppingCartRequest:
      type: object
      description: Serializer for create/update/delete shopping_cart.
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProductRequest'
      required:
      - products
    StatusEnum:
      enum:
      - Ordered
      - In processing
      - Collecting
      - Gathered
      - In delivering
      - Delivered
      - Completed
      type: string
    SubcategoriesCreateError:
      oneOf:
      - $ref: '#/components/schemas/SubcategoriesCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesCreateParentCategoryErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesCreateNameErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesCreateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SubcategoriesCreateNonFieldErrorsErrorComponent'
          parent_category: '#/components/schemas/SubcategoriesCreateParentCategoryErrorComponent'
          name: '#/components/schemas/SubcategoriesCreateNameErrorComponent'
          slug: '#/components/schemas/SubcategoriesCreateSlugErrorComponent'
    SubcategoriesCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SubcategoriesCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SubcategoriesCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SubcategoriesCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesCreateParentCategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - parent_category
          type: string
          description: '* `parent_category` - parent_category'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SubcategoriesCreateError'
      required:
      - errors
      - type
    SubcategoriesDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SubcategoriesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SubcategoriesPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/SubcategoriesPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesPartialUpdateParentCategoryErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/SubcategoriesPartialUpdateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/SubcategoriesPartialUpdateNonFieldErrorsErrorComponent'
          parent_category: '#/components/schemas/SubcategoriesPartialUpdateParentCategoryErrorComponent'
          name: '#/components/schemas/SubcategoriesPartialUpdateNameErrorComponent'
          slug: '#/components/schemas/SubcategoriesPartialUpdateSlugErrorComponent'
    SubcategoriesPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/SubcategoriesPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/SubcategoriesPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    SubcategoriesPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesPartialUpdateParentCategoryErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - parent_category
          type: string
          description: '* `parent_category` - parent_category'
        code:
          enum:
          - does_not_exist
          - incorrect_type
          - 'null'
          - required
          type: string
          description: |-
            * `does_not_exist` - does_not_exist
            * `incorrect_type` - incorrect_type
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    SubcategoriesPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SubcategoriesPartialUpdateError'
      required:
      - errors
      - type
    SubcategoriesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    Subcategory:
      type: object
      description: Serializer for subcategories representation.
      properties:
        id:
          type: integer
          readOnly: true
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - parent_category
    SubcategoryLight:
      type: object
      description: Serializer for subcategories representation in product serializer.
      properties:
        subcategory_name:
          type: string
        subcategory_slug:
          type: string
      required:
      - subcategory_name
      - subcategory_slug
    SubcategoryRequest:
      type: object
      description: Serializer for subcategories representation.
      properties:
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - parent_category
    Tag:
      type: object
      description: Serializer for tags representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        top_three_products:
          type: string
          readOnly: true
      required:
      - id
      - name
      - top_three_products
    TagLight:
      type: object
      description: Serializer for tags representation in product serializer.
      properties:
        tag_name:
          type: string
        tag_slug:
          type: string
      required:
      - tag_name
      - tag_slug
    TagRequest:
      type: object
      description: Serializer for tags representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    TagsCreateError:
      oneOf:
      - $ref: '#/components/schemas/TagsCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/TagsCreateNameErrorComponent'
      - $ref: '#/components/schemas/TagsCreateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/TagsCreateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/TagsCreateNameErrorComponent'
          slug: '#/components/schemas/TagsCreateSlugErrorComponent'
    TagsCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/TagsCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/TagsCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    TagsCreateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsCreateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TagsCreateError'
      required:
      - errors
      - type
    TagsDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    TagsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    TagsPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/TagsPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/TagsPartialUpdateNameErrorComponent'
      - $ref: '#/components/schemas/TagsPartialUpdateSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/TagsPartialUpdateNonFieldErrorsErrorComponent'
          name: '#/components/schemas/TagsPartialUpdateNameErrorComponent'
          slug: '#/components/schemas/TagsPartialUpdateSlugErrorComponent'
    TagsPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/TagsPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/TagsPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    TagsPartialUpdateNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - name
          type: string
          description: '* `name` - name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsPartialUpdateSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TagsPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TagsPartialUpdateError'
      required:
      - errors
      - type
    TagsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    TokenCreateRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
    TokenLoginCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TokenLoginCreateError:
      oneOf:
      - $ref: '#/components/schemas/TokenLoginCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/TokenLoginCreatePasswordErrorComponent'
      - $ref: '#/components/schemas/TokenLoginCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/TokenLoginCreateNonFieldErrorsErrorComponent'
          password: '#/components/schemas/TokenLoginCreatePasswordErrorComponent'
          email: '#/components/schemas/TokenLoginCreateEmailErrorComponent'
    TokenLoginCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/TokenLoginCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/TokenLoginCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    TokenLoginCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - inactive_account
          - invalid
          - invalid_credentials
          type: string
          description: |-
            * `inactive_account` - inactive_account
            * `invalid` - invalid
            * `invalid_credentials` - invalid_credentials
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TokenLoginCreatePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    TokenLoginCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TokenLoginCreateError'
      required:
      - errors
      - type
    TokenLogoutCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    User:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        address_quantity:
          type: integer
          readOnly: true
        phone_number:
          type: string
          pattern: ^(\+7|7|8)\d{10}$
          maxLength: 17
        photo:
          type: string
          format: uri
      required:
      - address_quantity
      - birth_date
      - email
      - id
      - username
    UserCreate:
      type: object
      description: Serializer for creating users.
      properties:
        email:
          type: string
          format: email
        id:
          type: integer
          readOnly: true
        username:
          type: string
        city:
          type: string
          readOnly: true
      required:
      - city
      - email
      - id
      - username
    UserCreateRequest:
      type: object
      description: Serializer for creating users.
      properties:
        email:
          type: string
          format: email
          minLength: 1
        username:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
      - username
    UserLight:
      type: object
      description: Serializer to represent user in favorite products serializers.
      properties:
        username:
          type: string
          description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - email
      - username
    UserPresent:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
      required:
      - username
    UserRequest:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          minLength: 1
          description: 150 characters or fewer. Letters, digits and @/./+/-/_ only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
        phone_number:
          type: string
          pattern: ^(\+7|7|8)\d{10}$
          maxLength: 17
        photo:
          type: string
          format: binary
      required:
      - birth_date
      - email
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - new_email
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
      required:
      - new_email
    UsersActivationCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersActivationCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersActivationCreateUidErrorComponent'
      - $ref: '#/components/schemas/UsersActivationCreateTokenErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersActivationCreateNonFieldErrorsErrorComponent'
          uid: '#/components/schemas/UsersActivationCreateUidErrorComponent'
          token: '#/components/schemas/UsersActivationCreateTokenErrorComponent'
    UsersActivationCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersActivationCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersActivationCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersActivationCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - invalid_token
          - invalid_uid
          - stale_token
          type: string
          description: |-
            * `invalid` - invalid
            * `invalid_token` - invalid_token
            * `invalid_uid` - invalid_uid
            * `stale_token` - stale_token
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersActivationCreateTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - token
          type: string
          description: '* `token` - token'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersActivationCreateUidErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - uid
          type: string
          description: '* `uid` - uid'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersActivationCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersActivationCreateError'
      required:
      - errors
      - type
    UsersAddressesListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersAddressesRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersCreateEmailErrorComponent'
      - $ref: '#/components/schemas/UsersCreateUsernameErrorComponent'
      - $ref: '#/components/schemas/UsersCreatePasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/UsersCreateEmailErrorComponent'
          username: '#/components/schemas/UsersCreateUsernameErrorComponent'
          password: '#/components/schemas/UsersCreatePasswordErrorComponent'
    UsersCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - cannot_create_user
          - invalid
          type: string
          description: |-
            * `cannot_create_user` - cannot_create_user
            * `invalid` - invalid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersCreatePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersCreateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersCreateError'
      required:
      - errors
      - type
    UsersDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersMeDestroyErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersMePartialUpdateAddressesINDEXAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.address
          type: string
          description: '* `addresses.INDEX.address` - addresses.INDEX.address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateAddressesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.non_field_errors
          type: string
          description: '* `addresses.INDEX.non_field_errors` - addresses.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateAddressesINDEXPriorityAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.priority_address
          type: string
          description: '* `addresses.INDEX.priority_address` - addresses.INDEX.priority_address'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateAddressesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.non_field_errors
          type: string
          description: '* `addresses.non_field_errors` - addresses.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateBirthDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - birth_date
          type: string
          description: '* `birth_date` - birth_date'
        code:
          enum:
          - datetime
          - invalid
          - required
          type: string
          description: |-
            * `datetime` - datetime
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateCityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - city
          type: string
          description: '* `city` - city'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/UsersMePartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateEmailErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateLastNameErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateCityErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateBirthDateErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateAddressesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateAddressesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateAddressesINDEXAddressErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdateAddressesINDEXPriorityAddressErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdatePhoneNumberErrorComponent'
      - $ref: '#/components/schemas/UsersMePartialUpdatePhotoErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersMePartialUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/UsersMePartialUpdateUsernameErrorComponent'
          email: '#/components/schemas/UsersMePartialUpdateEmailErrorComponent'
          first_name: '#/components/schemas/UsersMePartialUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/UsersMePartialUpdateLastNameErrorComponent'
          city: '#/components/schemas/UsersMePartialUpdateCityErrorComponent'
          birth_date: '#/components/schemas/UsersMePartialUpdateBirthDateErrorComponent'
          addresses.non_field_errors: '#/components/schemas/UsersMePartialUpdateAddressesNonFieldErrorsErrorComponent'
          addresses.INDEX.non_field_errors: '#/components/schemas/UsersMePartialUpdateAddressesINDEXNonFieldErrorsErrorComponent'
          addresses.INDEX.address: '#/components/schemas/UsersMePartialUpdateAddressesINDEXAddressErrorComponent'
          addresses.INDEX.priority_address: '#/components/schemas/UsersMePartialUpdateAddressesINDEXPriorityAddressErrorComponent'
          phone_number: '#/components/schemas/UsersMePartialUpdatePhoneNumberErrorComponent'
          photo: '#/components/schemas/UsersMePartialUpdatePhotoErrorComponent'
    UsersMePartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersMePartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersMePartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersMePartialUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdatePhoneNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - phone_number
          type: string
          description: '* `phone_number` - phone_number'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMePartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersMePartialUpdateError'
      required:
      - errors
      - type
    UsersMeRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersMeUpdateAddressesINDEXAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.address
          type: string
          description: '* `addresses.INDEX.address` - addresses.INDEX.address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateAddressesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.non_field_errors
          type: string
          description: '* `addresses.INDEX.non_field_errors` - addresses.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateAddressesINDEXPriorityAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.priority_address
          type: string
          description: '* `addresses.INDEX.priority_address` - addresses.INDEX.priority_address'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateAddressesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.non_field_errors
          type: string
          description: '* `addresses.non_field_errors` - addresses.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateBirthDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - birth_date
          type: string
          description: '* `birth_date` - birth_date'
        code:
          enum:
          - datetime
          - invalid
          - required
          type: string
          description: |-
            * `datetime` - datetime
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateCityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - city
          type: string
          description: '* `city` - city'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateError:
      oneOf:
      - $ref: '#/components/schemas/UsersMeUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateEmailErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateLastNameErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateCityErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateBirthDateErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateAddressesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateAddressesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateAddressesINDEXAddressErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdateAddressesINDEXPriorityAddressErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdatePhoneNumberErrorComponent'
      - $ref: '#/components/schemas/UsersMeUpdatePhotoErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersMeUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/UsersMeUpdateUsernameErrorComponent'
          email: '#/components/schemas/UsersMeUpdateEmailErrorComponent'
          first_name: '#/components/schemas/UsersMeUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/UsersMeUpdateLastNameErrorComponent'
          city: '#/components/schemas/UsersMeUpdateCityErrorComponent'
          birth_date: '#/components/schemas/UsersMeUpdateBirthDateErrorComponent'
          addresses.non_field_errors: '#/components/schemas/UsersMeUpdateAddressesNonFieldErrorsErrorComponent'
          addresses.INDEX.non_field_errors: '#/components/schemas/UsersMeUpdateAddressesINDEXNonFieldErrorsErrorComponent'
          addresses.INDEX.address: '#/components/schemas/UsersMeUpdateAddressesINDEXAddressErrorComponent'
          addresses.INDEX.priority_address: '#/components/schemas/UsersMeUpdateAddressesINDEXPriorityAddressErrorComponent'
          phone_number: '#/components/schemas/UsersMeUpdatePhoneNumberErrorComponent'
          photo: '#/components/schemas/UsersMeUpdatePhotoErrorComponent'
    UsersMeUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersMeUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersMeUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersMeUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdatePhoneNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - phone_number
          type: string
          description: '* `phone_number` - phone_number'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersMeUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersMeUpdateError'
      required:
      - errors
      - type
    UsersPartialUpdateAddressesINDEXAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.address
          type: string
          description: '* `addresses.INDEX.address` - addresses.INDEX.address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateAddressesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.non_field_errors
          type: string
          description: '* `addresses.INDEX.non_field_errors` - addresses.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateAddressesINDEXPriorityAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.priority_address
          type: string
          description: '* `addresses.INDEX.priority_address` - addresses.INDEX.priority_address'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateAddressesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.non_field_errors
          type: string
          description: '* `addresses.non_field_errors` - addresses.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateBirthDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - birth_date
          type: string
          description: '* `birth_date` - birth_date'
        code:
          enum:
          - datetime
          - invalid
          - required
          type: string
          description: |-
            * `datetime` - datetime
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateCityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - city
          type: string
          description: '* `city` - city'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateError:
      oneOf:
      - $ref: '#/components/schemas/UsersPartialUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateEmailErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateLastNameErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateCityErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateBirthDateErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateAddressesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateAddressesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateAddressesINDEXAddressErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdateAddressesINDEXPriorityAddressErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdatePhoneNumberErrorComponent'
      - $ref: '#/components/schemas/UsersPartialUpdatePhotoErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersPartialUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/UsersPartialUpdateUsernameErrorComponent'
          email: '#/components/schemas/UsersPartialUpdateEmailErrorComponent'
          first_name: '#/components/schemas/UsersPartialUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/UsersPartialUpdateLastNameErrorComponent'
          city: '#/components/schemas/UsersPartialUpdateCityErrorComponent'
          birth_date: '#/components/schemas/UsersPartialUpdateBirthDateErrorComponent'
          addresses.non_field_errors: '#/components/schemas/UsersPartialUpdateAddressesNonFieldErrorsErrorComponent'
          addresses.INDEX.non_field_errors: '#/components/schemas/UsersPartialUpdateAddressesINDEXNonFieldErrorsErrorComponent'
          addresses.INDEX.address: '#/components/schemas/UsersPartialUpdateAddressesINDEXAddressErrorComponent'
          addresses.INDEX.priority_address: '#/components/schemas/UsersPartialUpdateAddressesINDEXPriorityAddressErrorComponent'
          phone_number: '#/components/schemas/UsersPartialUpdatePhoneNumberErrorComponent'
          photo: '#/components/schemas/UsersPartialUpdatePhotoErrorComponent'
    UsersPartialUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersPartialUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersPartialUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersPartialUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdatePhoneNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - phone_number
          type: string
          description: '* `phone_number` - phone_number'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersPartialUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersPartialUpdateError'
      required:
      - errors
      - type
    UsersResendActivationCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResendActivationCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersResendActivationCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersResendActivationCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersResendActivationCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/UsersResendActivationCreateEmailErrorComponent'
    UsersResendActivationCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersResendActivationCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersResendActivationCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersResendActivationCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - email_not_found
          - invalid
          type: string
          description: |-
            * `email_not_found` - email_not_found
            * `invalid` - invalid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResendActivationCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersResendActivationCreateError'
      required:
      - errors
      - type
    UsersResetPasswordConfirmCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersResetPasswordConfirmCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersResetPasswordConfirmCreateUidErrorComponent'
      - $ref: '#/components/schemas/UsersResetPasswordConfirmCreateTokenErrorComponent'
      - $ref: '#/components/schemas/UsersResetPasswordConfirmCreateNewPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersResetPasswordConfirmCreateNonFieldErrorsErrorComponent'
          uid: '#/components/schemas/UsersResetPasswordConfirmCreateUidErrorComponent'
          token: '#/components/schemas/UsersResetPasswordConfirmCreateTokenErrorComponent'
          new_password: '#/components/schemas/UsersResetPasswordConfirmCreateNewPasswordErrorComponent'
    UsersResetPasswordConfirmCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersResetPasswordConfirmCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersResetPasswordConfirmCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersResetPasswordConfirmCreateNewPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password
          type: string
          description: '* `new_password` - new_password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordConfirmCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - invalid_token
          - invalid_uid
          type: string
          description: |-
            * `invalid` - invalid
            * `invalid_token` - invalid_token
            * `invalid_uid` - invalid_uid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordConfirmCreateTokenErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - token
          type: string
          description: '* `token` - token'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordConfirmCreateUidErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - uid
          type: string
          description: '* `uid` - uid'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordConfirmCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersResetPasswordConfirmCreateError'
      required:
      - errors
      - type
    UsersResetPasswordCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersResetPasswordCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersResetPasswordCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersResetPasswordCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/UsersResetPasswordCreateEmailErrorComponent'
    UsersResetPasswordCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersResetPasswordCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersResetPasswordCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersResetPasswordCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - email_not_found
          - invalid
          type: string
          description: |-
            * `email_not_found` - email_not_found
            * `invalid` - invalid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetPasswordCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersResetPasswordCreateError'
      required:
      - errors
      - type
    UsersResetUsernameConfirmCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersResetUsernameConfirmCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersResetUsernameConfirmCreateNewEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersResetUsernameConfirmCreateNonFieldErrorsErrorComponent'
          new_email: '#/components/schemas/UsersResetUsernameConfirmCreateNewEmailErrorComponent'
    UsersResetUsernameConfirmCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersResetUsernameConfirmCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersResetUsernameConfirmCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersResetUsernameConfirmCreateNewEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_email
          type: string
          description: '* `new_email` - new_email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetUsernameConfirmCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - invalid_token
          - invalid_uid
          type: string
          description: |-
            * `invalid` - invalid
            * `invalid_token` - invalid_token
            * `invalid_uid` - invalid_uid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetUsernameConfirmCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersResetUsernameConfirmCreateError'
      required:
      - errors
      - type
    UsersResetUsernameCreateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetUsernameCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersResetUsernameCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersResetUsernameCreateEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersResetUsernameCreateNonFieldErrorsErrorComponent'
          email: '#/components/schemas/UsersResetUsernameCreateEmailErrorComponent'
    UsersResetUsernameCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersResetUsernameCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersResetUsernameCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersResetUsernameCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - email_not_found
          - invalid
          type: string
          description: |-
            * `email_not_found` - email_not_found
            * `invalid` - invalid
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersResetUsernameCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersResetUsernameCreateError'
      required:
      - errors
      - type
    UsersRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersSetPasswordCreateCurrentPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - current_password
          type: string
          description: '* `current_password` - current_password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetPasswordCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersSetPasswordCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersSetPasswordCreateNewPasswordErrorComponent'
      - $ref: '#/components/schemas/UsersSetPasswordCreateCurrentPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersSetPasswordCreateNonFieldErrorsErrorComponent'
          new_password: '#/components/schemas/UsersSetPasswordCreateNewPasswordErrorComponent'
          current_password: '#/components/schemas/UsersSetPasswordCreateCurrentPasswordErrorComponent'
    UsersSetPasswordCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersSetPasswordCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersSetPasswordCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersSetPasswordCreateNewPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_password
          type: string
          description: '* `new_password` - new_password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetPasswordCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - invalid_password
          type: string
          description: |-
            * `invalid` - invalid
            * `invalid_password` - invalid_password
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetPasswordCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersSetPasswordCreateError'
      required:
      - errors
      - type
    UsersSetUsernameCreateCurrentPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - current_password
          type: string
          description: '* `current_password` - current_password'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetUsernameCreateError:
      oneOf:
      - $ref: '#/components/schemas/UsersSetUsernameCreateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersSetUsernameCreateCurrentPasswordErrorComponent'
      - $ref: '#/components/schemas/UsersSetUsernameCreateNewEmailErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersSetUsernameCreateNonFieldErrorsErrorComponent'
          current_password: '#/components/schemas/UsersSetUsernameCreateCurrentPasswordErrorComponent'
          new_email: '#/components/schemas/UsersSetUsernameCreateNewEmailErrorComponent'
    UsersSetUsernameCreateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersSetUsernameCreateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersSetUsernameCreateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersSetUsernameCreateNewEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - new_email
          type: string
          description: '* `new_email` - new_email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetUsernameCreateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          - invalid_password
          type: string
          description: |-
            * `invalid` - invalid
            * `invalid_password` - invalid_password
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersSetUsernameCreateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersSetUsernameCreateError'
      required:
      - errors
      - type
    UsersUpdateAddressesINDEXAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.address
          type: string
          description: '* `addresses.INDEX.address` - addresses.INDEX.address'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateAddressesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.non_field_errors
          type: string
          description: '* `addresses.INDEX.non_field_errors` - addresses.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateAddressesINDEXPriorityAddressErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.INDEX.priority_address
          type: string
          description: '* `addresses.INDEX.priority_address` - addresses.INDEX.priority_address'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateAddressesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - addresses.non_field_errors
          type: string
          description: '* `addresses.non_field_errors` - addresses.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateBirthDateErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - birth_date
          type: string
          description: '* `birth_date` - birth_date'
        code:
          enum:
          - datetime
          - invalid
          - required
          type: string
          description: |-
            * `datetime` - datetime
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateCityErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - city
          type: string
          description: '* `city` - city'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateEmailErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - email
          type: string
          description: '* `email` - email'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateError:
      oneOf:
      - $ref: '#/components/schemas/UsersUpdateNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateUsernameErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateEmailErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateFirstNameErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateLastNameErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateCityErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateBirthDateErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateAddressesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateAddressesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateAddressesINDEXAddressErrorComponent'
      - $ref: '#/components/schemas/UsersUpdateAddressesINDEXPriorityAddressErrorComponent'
      - $ref: '#/components/schemas/UsersUpdatePhoneNumberErrorComponent'
      - $ref: '#/components/schemas/UsersUpdatePhotoErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UsersUpdateNonFieldErrorsErrorComponent'
          username: '#/components/schemas/UsersUpdateUsernameErrorComponent'
          email: '#/components/schemas/UsersUpdateEmailErrorComponent'
          first_name: '#/components/schemas/UsersUpdateFirstNameErrorComponent'
          last_name: '#/components/schemas/UsersUpdateLastNameErrorComponent'
          city: '#/components/schemas/UsersUpdateCityErrorComponent'
          birth_date: '#/components/schemas/UsersUpdateBirthDateErrorComponent'
          addresses.non_field_errors: '#/components/schemas/UsersUpdateAddressesNonFieldErrorsErrorComponent'
          addresses.INDEX.non_field_errors: '#/components/schemas/UsersUpdateAddressesINDEXNonFieldErrorsErrorComponent'
          addresses.INDEX.address: '#/components/schemas/UsersUpdateAddressesINDEXAddressErrorComponent'
          addresses.INDEX.priority_address: '#/components/schemas/UsersUpdateAddressesINDEXPriorityAddressErrorComponent'
          phone_number: '#/components/schemas/UsersUpdatePhoneNumberErrorComponent'
          photo: '#/components/schemas/UsersUpdatePhotoErrorComponent'
    UsersUpdateErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UsersUpdateValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UsersUpdateValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UsersUpdateFirstNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - first_name
          type: string
          description: '* `first_name` - first_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateLastNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - last_name
          type: string
          description: '* `last_name` - last_name'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdatePhoneNumberErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - phone_number
          type: string
          description: '* `phone_number` - phone_number'
        code:
          enum:
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdatePhotoErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - photo
          type: string
          description: '* `photo` - photo'
        code:
          enum:
          - empty
          - invalid
          - invalid_image
          - max_length
          - no_name
          - 'null'
          type: string
          description: |-
            * `empty` - empty
            * `invalid` - invalid
            * `invalid_image` - invalid_image
            * `max_length` - max_length
            * `no_name` - no_name
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          - unique
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
            * `unique` - unique
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UsersUpdateValidationError:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ValidationErrorEnum'
          description: '* `validation_error` - Validation Error'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UsersUpdateError'
      required:
      - errors
      - type
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
