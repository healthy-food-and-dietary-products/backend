openapi: 3.0.3
info:
  title: Good Food API
  version: v1
  description: API documentation for the GoodFood project
paths:
  /api/categories/:
    get:
      operationId: categories_list
      description: Viewset for categories.
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      description: Viewset for categories.
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreate'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryCreateRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreate'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
    delete:
      operationId: categories_destroy
      description: Viewset for categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/components/:
    get:
      operationId: components_list
      description: Viewset for components.
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
          description: ''
    post:
      operationId: components_create
      description: Viewset for components.
      tags:
      - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComponentRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
  /api/components/{id}/:
    get:
      operationId: components_retrieve
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
    patch:
      operationId: components_partial_update
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComponentRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
    delete:
      operationId: components_destroy
      description: Viewset for components.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Component.
        required: true
      tags:
      - components
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/favorite-products/:
    get:
      operationId: favorite_products_list
      description: Viewset for viewing useres' favorite products by admins.
      tags:
      - favorite-products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteProduct'
          description: ''
  /api/favorite-products/{id}/:
    get:
      operationId: favorite_products_retrieve
      description: Viewset for viewing useres' favorite products by admins.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Favorite Product.
        required: true
      tags:
      - favorite-products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProduct'
          description: ''
  /api/producers/:
    get:
      operationId: producers_list
      description: Viewset for producers.
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producer'
          description: ''
    post:
      operationId: producers_create
      description: Viewset for producers.
      tags:
      - producers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProducerRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
  /api/producers/{id}/:
    get:
      operationId: producers_retrieve
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
    patch:
      operationId: producers_partial_update
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProducerRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
    delete:
      operationId: producers_destroy
      description: Viewset for producers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Producer.
        required: true
      tags:
      - producers
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      description: Viewset for products.
      parameters:
      - in: query
        name: category
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: components
        schema:
          type: array
          items:
            type: string
        description: Component slug
        explode: true
        style: form
      - in: query
        name: discontinued
        schema:
          type: boolean
      - in: query
        name: is_favorited
        schema:
          type: number
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: min_price
        schema:
          type: number
      - in: query
        name: name
        schema:
          type: array
          items:
            type: string
        description: Product name
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: producer
        schema:
          type: array
          items:
            type: string
        description: Producer slug
        explode: true
        style: form
      - in: query
        name: promotions
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: subcategory
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
        description: Tag slug
        explode: true
        style: form
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: Viewset for products.
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
        '400':
          $ref: '#/components/responses/ValidationError'
        '400':
          $ref: '#/components/responses/NestedValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      description: Increments the views_number field when someone views this product.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductUpdateRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdate'
          description: ''
    delete:
      operationId: products_destroy
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/products/{id}/favorite/:
    post:
      operationId: products_favorite_create
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteProductCreate'
          description: ''
    delete:
      operationId: products_favorite_destroy
      description: Viewset for products.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/promotions/:
    get:
      operationId: promotions_list
      description: Viewset for promotions.
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
          description: ''
    post:
      operationId: promotions_create
      description: Viewset for promotions.
      tags:
      - promotions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
  /api/promotions/{id}/:
    get:
      operationId: promotions_retrieve
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    patch:
      operationId: promotions_partial_update
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPromotionRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
    delete:
      operationId: promotions_destroy
      description: Viewset for promotions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Promotion.
        required: true
      tags:
      - promotions
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/subcategories/:
    get:
      operationId: subcategories_list
      description: Viewset for subcategories.
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
          description: ''
    post:
      operationId: subcategories_create
      description: Viewset for subcategories.
      tags:
      - subcategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
  /api/subcategories/{id}/:
    get:
      operationId: subcategories_retrieve
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    patch:
      operationId: subcategories_partial_update
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    delete:
      operationId: subcategories_destroy
      description: Viewset for subcategories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategory.
        required: true
      tags:
      - subcategories
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/tags/:
    get:
      operationId: tags_list
      description: Viewset for tags.
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: tags_create
      description: Viewset for tags.
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: tags_retrieve
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      description: Viewset for tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - tags
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/token/login/:
    post:
      operationId: token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/token/logout/:
    post:
      operationId: token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - token
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{user_id}/addresses/:
    get:
      operationId: users_addresses_list
      description: Viewset for addresses.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
  /api/users/{user_id}/addresses/{id}/:
    get:
      operationId: users_addresses_retrieve
      description: Viewset for addresses.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/users/{user_id}/order/:
    get:
      operationId: users_order_list
      description: Viewset for Order.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderList'
          description: ''
    post:
      operationId: users_order_create
      description: Viewset for Order.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPostDeleteRequest'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPostDelete'
          description: ''
  /api/users/{user_id}/order/{id}/:
    get:
      operationId: users_order_retrieve
      description: Viewset for Order.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: ''
    delete:
      operationId: users_order_destroy
      description: Viewset for Order.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{user_id}/shopping_cart/:
    get:
      operationId: users_shopping_cart_list
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCartGet'
          description: ''
    post:
      operationId: users_shopping_cart_create
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartPostUpdateDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartPostUpdateDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartPostUpdateDeleteRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartPostUpdateDelete'
          description: ''
  /api/users/{user_id}/shopping_cart/{id}/:
    get:
      operationId: users_shopping_cart_retrieve
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Корзина.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartGet'
          description: ''
    patch:
      operationId: users_shopping_cart_partial_update
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Корзина.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartPostUpdateDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartPostUpdateDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartPostUpdateDeleteRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartPostUpdateDelete'
          description: ''
    delete:
      operationId: users_shopping_cart_destroy
      description: Viewset for ShoppingCart.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Корзина.
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/activation/:
    post:
      operationId: users_activation_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_me_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_me_partial_update
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_me_destroy
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/resend_activation/:
    post:
      operationId: users_resend_activation_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_password/:
    post:
      operationId: users_reset_password_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/users/reset_username/:
    post:
      operationId: users_reset_username_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/users/reset_username_confirm/:
    post:
      operationId: users_reset_username_confirm_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/users/set_password/:
    post:
      operationId: users_set_password_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/users/set_username/:
    post:
      operationId: users_set_username_create
      description: Overrides DjoserUserViewSet serializer to delete a user without
        password.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    Address:
      type: object
      description: Serializer for addresses representation.
      properties:
        id:
          type: integer
          readOnly: true
        address:
          type: string
        priority_address:
          type: boolean
          title: Priority
      required:
      - address
      - id
    AddressRequest:
      type: object
      description: Serializer for addresses representation.
      properties:
        address:
          type: string
          minLength: 1
        priority_address:
          type: boolean
          title: Priority
      required:
      - address
    Category:
      type: object
      description: Serializer for displaying categories.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SubcategoryLight'
      required:
      - id
      - name
    CategoryCreate:
      type: object
      description: Serializer for creating categories.
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - category_name
      - id
    CategoryCreateRequest:
      type: object
      description: Serializer for creating categories.
      properties:
        category_name:
          type: string
          minLength: 1
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - category_name
    CategoryLight:
      type: object
      description: Serializer for categories representation in product serializer.
      properties:
        category_name:
          type: string
      required:
      - category_name
    CityEnum:
      enum:
      - Moscow
      type: string
    Component:
      type: object
      description: Serializer for components representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    ComponentLight:
      type: object
      description: Serializer for components representation in product serializer.
      properties:
        component_name:
          type: string
      required:
      - component_name
    ComponentRequest:
      type: object
      description: Serializer for components representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    DeliveryMethodEnum:
      enum:
      - Point of delivery
      - By courier
      type: string
    FavoriteProduct:
      type: object
      description: Serializer for favorite products list representation.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserLight'
        product:
          $ref: '#/components/schemas/ProductLight'
      required:
      - id
      - product
      - user
    FavoriteProductCreate:
      type: object
      description: Serializer for creation favorite products.
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    MeasureUnitEnum:
      enum:
      - grams
      - milliliters
      - items
      type: string
    OrderList:
      type: object
      description: Serializer for order representation.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserPresent'
          readOnly: true
        shopping_cart:
          allOf:
          - $ref: '#/components/schemas/ShoppingCartGet'
          readOnly: true
        order_number:
          type: integer
          readOnly: true
        ordering_date:
          type: string
          format: date-time
          readOnly: true
          title: DateTime
        status:
          allOf:
          - $ref: '#/components/schemas/OrderListStatusEnum'
          description: |-
            * `Ordered` - Оформлен
            * `In processing` - В обработке
            * `Collecting` - Комплектуется
            * `Gathered` - Собран
            * `In delivering` - Передан в доставку
            * `Delivered` - Доставлен
            * `Completed` - Завершен
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        is_paid:
          type: boolean
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        address:
          type: string
          readOnly: true
        delivery_point:
          type: string
          readOnly: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        total_price:
          type: number
          format: double
          readOnly: true
      required:
      - address
      - delivery_point
      - id
      - order_number
      - ordering_date
      - shopping_cart
      - total_price
      - user
    OrderListStatusEnum:
      enum:
      - Ordered
      - In processing
      - Collecting
      - Gathered
      - In delivering
      - Delivered
      - Completed
      type: string
    OrderPostDelete:
      type: object
      description: Serializer for create/update/delete order.
      properties:
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        delivery_point:
          type: integer
          nullable: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        address:
          type: integer
          nullable: true
          title: User's address
    OrderPostDeleteRequest:
      type: object
      description: Serializer for create/update/delete order.
      properties:
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            * `Payment at the point of delivery` - Оплата в пункте самовывоза
            * `In getting by cash` - Оплата наличными курьеру
        delivery_method:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethodEnum'
          description: |-
            * `Point of delivery` - Пункт выдачи
            * `By courier` - Курьер
        delivery_point:
          type: integer
          nullable: true
        package:
          type: number
          format: double
          minimum: 0
          title: Package price
          description: Price per order packaging
        comment:
          type: string
          nullable: true
        address:
          type: integer
          nullable: true
          title: User's address
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PasswordResetConfirmRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - token
      - uid
    PatchedCategoryCreateRequest:
      type: object
      description: Serializer for creating categories.
      properties:
        category_name:
          type: string
          minLength: 1
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedComponentRequest:
      type: object
      description: Serializer for components representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Component name
          maxLength: 100
        slug:
          type: string
          description: Component slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedProducerRequest:
      type: object
      description: Serializer for produsers representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          minLength: 1
          description: Legal address of the producers
    PatchedProductUpdateRequest:
      type: object
      description: Serializer for updating products.
      properties:
        name:
          type: string
          minLength: 1
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        promotions:
          type: array
          items:
            type: integer
        photo:
          type: string
          format: binary
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: integer
          description: Number of proteins per 100 g of product
        fats:
          type: integer
          description: Number of fats per 100 g of product
        carbohydrates:
          type: integer
          description: Number of carbohydrates per 100 g of product
    PatchedPromotionRequest:
      type: object
      description: Serializer for promotions representation.
      properties:
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          minLength: 1
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
    PatchedShoppingCartPostUpdateDeleteRequest:
      type: object
      description: Serializer for create/update/delete shopping_cart.
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProductCreateUpdateRequest'
    PatchedSubcategoryRequest:
      type: object
      description: Serializer for subcategories representation.
      properties:
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedTagRequest:
      type: object
      description: Serializer for tags representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedUserRequest:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          description: |-
            * `user` - Аутентифицированный пользователь
            * `moderator` - Модератор
            * `admin` - Администратор
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
        phone_number:
          type: string
          maxLength: 128
        photo:
          type: string
          format: binary
    PaymentMethodEnum:
      enum:
      - Payment at the point of delivery
      - In getting by cash
      type: string
    Producer:
      type: object
      description: Serializer for produsers representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          description: Legal address of the producers
      required:
      - address
      - id
      - name
    ProducerLight:
      type: object
      description: Serializer for produsers representation in product serializer.
      properties:
        producer_name:
          type: string
      required:
      - producer_name
    ProducerRequest:
      type: object
      description: Serializer for produsers representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Producer name
          maxLength: 100
        slug:
          type: string
          description: Producer slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        producer_type:
          allOf:
          - $ref: '#/components/schemas/ProducerTypeEnum'
          description: |-
            * `company` - Юридическое лицо
            * `entrepreneur` - Индивидуальный предприниматель
        description:
          type: string
          description: Brief information about the company or entrepreneur
        address:
          type: string
          minLength: 1
          description: Legal address of the producers
      required:
      - address
      - name
    ProducerTypeEnum:
      enum:
      - company
      - entrepreneur
      type: string
    Product:
      type: object
      description: Serializer for displaying products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryLight'
          readOnly: true
        subcategory:
          $ref: '#/components/schemas/SubcategoryLight'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagLight'
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          $ref: '#/components/schemas/ProducerLight'
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        promotions:
          type: array
          items:
            $ref: '#/components/schemas/PromotionLight'
        promotion_quantity:
          type: integer
          readOnly: true
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            $ref: '#/components/schemas/ComponentLight'
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: integer
          description: Number of proteins per 100 g of product
        fats:
          type: integer
          description: Number of fats per 100 g of product
        carbohydrates:
          type: integer
          description: Number of carbohydrates per 100 g of product
        views_number:
          type: integer
          description: Number of product page views
        orders_number:
          type: integer
          description: Number of orders for this product
        is_favorited:
          type: boolean
          readOnly: true
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - is_favorited
      - kcal
      - name
      - price
      - producer
      - promotion_quantity
      - proteins
      - subcategory
    ProductCreate:
      type: object
      description: Serializer for creating products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          type: integer
          readOnly: true
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: integer
          description: Number of proteins per 100 g of product
        fats:
          type: integer
          description: Number of fats per 100 g of product
        carbohydrates:
          type: integer
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - kcal
      - name
      - price
      - producer
      - proteins
      - subcategory
    ProductCreateRequest:
      type: object
      description: Serializer for creating products.
      properties:
        name:
          type: string
          minLength: 1
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        photo:
          type: string
          format: binary
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: integer
          description: Number of proteins per 100 g of product
        fats:
          type: integer
          description: Number of fats per 100 g of product
        carbohydrates:
          type: integer
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - components
      - fats
      - kcal
      - name
      - price
      - producer
      - proteins
      - subcategory
    ProductLight:
      type: object
      description: Serializer for products representation in favorite product serializer.
      properties:
        name:
          type: string
          description: Product name
          maxLength: 100
        producer:
          $ref: '#/components/schemas/ProducerLight'
      required:
      - name
      - producer
    ProductUpdate:
      type: object
      description: Serializer for updating products.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 100
        description:
          type: string
          description: Product description
        creation_time:
          type: string
          format: date-time
          readOnly: true
          description: Date of inclusion of the product in the database
        category:
          type: integer
          readOnly: true
        subcategory:
          type: integer
        tags:
          type: array
          items:
            type: integer
        discontinued:
          type: boolean
          description: Is this product discontinued from sale
        producer:
          type: integer
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
        amount:
          type: integer
          description: Number of grams, milliliters or items
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
        final_price:
          type: number
          format: double
          readOnly: true
        promotions:
          type: array
          items:
            type: integer
        photo:
          type: string
          format: uri
        components:
          type: array
          items:
            type: integer
        kcal:
          type: integer
          description: Number of kcal per 100 g of product
        proteins:
          type: integer
          description: Number of proteins per 100 g of product
        fats:
          type: integer
          description: Number of fats per 100 g of product
        carbohydrates:
          type: integer
          description: Number of carbohydrates per 100 g of product
      required:
      - carbohydrates
      - category
      - components
      - creation_time
      - fats
      - final_price
      - id
      - kcal
      - name
      - price
      - producer
      - promotions
      - proteins
      - subcategory
    Promotion:
      type: object
      description: Serializer for promotions representation.
      properties:
        id:
          type: integer
          readOnly: true
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
      required:
      - id
      - name
    PromotionLight:
      type: object
      description: Serializer for promotions representation in product serializer.
      properties:
        promotion_name:
          type: string
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
      required:
      - promotion_name
    PromotionRequest:
      type: object
      description: Serializer for promotions representation.
      properties:
        promotion_type:
          allOf:
          - $ref: '#/components/schemas/PromotionTypeEnum'
          description: |-
            * `simple` - Простая скидка
            * `birthday` - Скидка именинникам
            * `loyalty_card` - Скидка по карте покупателя
            * `expired_soon` - Скидка на товары с истекающим сроком годности
            * `present` - Товар в подарок
            * `two_for_one` - Два по цене одного
            * `multiple_items` - Скидка при покупке нескольких штук
        name:
          type: string
          minLength: 1
          description: Promotion name
          maxLength: 100
        discount:
          type: integer
          maximum: 100
          description: Percentage of a product price
        conditions:
          type: string
          description: Conditions of the promotion
        is_active:
          type: boolean
          title: Active or not
          description: Is this promotion valid now
        is_constant:
          type: boolean
          title: Constant or not
          description: Does this promotion have a time limits
        start_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion start time
        end_time:
          type: string
          format: date-time
          nullable: true
          title: Promotion end time
      required:
      - name
    PromotionTypeEnum:
      enum:
      - simple
      - birthday
      - loyalty_card
      - expired_soon
      - present
      - two_for_one
      - multiple_items
      type: string
    RoleEnum:
      enum:
      - user
      - moderator
      - admin
      type: string
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetPasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - current_password
      - new_email
    SetUsernameRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
      required:
      - current_password
      - new_email
    ShoppingCartGet:
      type: object
      description: Serializer for shopping_cart representation.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserPresent'
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProductList'
          readOnly: true
        total_price:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/ShoppingCartGetStatusEnum'
          description: |-
            * `Ordered` - Передано в заказ
            * `In Work` - В работе
      required:
      - id
      - products
      - user
    ShoppingCartGetStatusEnum:
      enum:
      - Ordered
      - In Work
      type: string
    ShoppingCartPostUpdateDelete:
      type: object
      description: Serializer for create/update/delete shopping_cart.
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProductCreateUpdate'
      required:
      - products
    ShoppingCartPostUpdateDeleteRequest:
      type: object
      description: Serializer for create/update/delete shopping_cart.
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProductCreateUpdateRequest'
      required:
      - products
    ShoppingCartProductCreateUpdate:
      type: object
      description: Serializer for add/update/delete products into shopping_cart.
      properties:
        id:
          type: integer
        quantity:
          type: integer
          default: 1
      required:
      - id
    ShoppingCartProductCreateUpdateRequest:
      type: object
      description: Serializer for add/update/delete products into shopping_cart.
      properties:
        id:
          type: integer
        quantity:
          type: integer
          default: 1
      required:
      - id
    ShoppingCartProductList:
      type: object
      description: Serializer products in shopping_cart.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          readOnly: true
        measure_unit:
          allOf:
          - $ref: '#/components/schemas/MeasureUnitEnum'
          description: |-
            * `grams` - г.
            * `milliliters` - мл.
            * `items` - шт.
          readOnly: true
        price:
          type: number
          format: double
          minimum: 0
          description: Price per one product unit
          readOnly: true
        final_price:
          type: number
          format: double
          readOnly: true
        amount:
          type: integer
          description: Number of grams, milliliters or items
          readOnly: true
        quantity:
          type: integer
          maximum: 10000
          minimum: 1
          title: Количество
        is_favorited_by_user:
          type: boolean
          description: Checks if this product is in the buyer's favorites.
          readOnly: true
      required:
      - amount
      - final_price
      - id
      - is_favorited_by_user
      - measure_unit
      - name
      - price
    Subcategory:
      type: object
      description: Serializer for subcategories representation.
      properties:
        id:
          type: integer
          readOnly: true
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - parent_category
    SubcategoryLight:
      type: object
      description: Serializer for subcategories representation in product serializer.
      properties:
        subcategory_name:
          type: string
      required:
      - subcategory_name
    SubcategoryRequest:
      type: object
      description: Serializer for subcategories representation.
      properties:
        parent_category:
          type: integer
          title: Category
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - parent_category
    Tag:
      type: object
      description: Serializer for tags representation.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    TagLight:
      type: object
      description: Serializer for tags representation in product serializer.
      properties:
        tag_name:
          type: string
      required:
      - tag_name
    TagRequest:
      type: object
      description: Serializer for tags representation.
      properties:
        name:
          type: string
          minLength: 1
          description: Tag name
          maxLength: 100
        slug:
          type: string
          description: Tag slug
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    TokenCreateRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
    User:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          description: |-
            * `user` - Аутентифицированный пользователь
            * `moderator` - Модератор
            * `admin` - Администратор
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        address_quantity:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 128
        photo:
          type: string
          format: uri
      required:
      - address_quantity
      - email
      - id
      - username
    UserCreate:
      type: object
      description: Serializer for creating users.
      properties:
        email:
          type: string
          format: email
        id:
          type: integer
          readOnly: true
        username:
          type: string
        city:
          type: string
          readOnly: true
      required:
      - city
      - email
      - id
      - username
    UserCreateRequest:
      type: object
      description: Serializer for creating users.
      properties:
        email:
          type: string
          format: email
          minLength: 1
        username:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
      - username
    UserLight:
      type: object
      description: Serializer to represent user in favorite products serializers.
      properties:
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - email
      - username
    UserPresent:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
      required:
      - username
    UserRequest:
      type: object
      description: Serializer for displaying and updating users.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          description: |-
            * `user` - Аутентифицированный пользователь
            * `moderator` - Модератор
            * `admin` - Администратор
        city:
          allOf:
          - $ref: '#/components/schemas/CityEnum'
          description: '* `Moscow` - Москва'
        birth_date:
          type: string
          format: date
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressRequest'
        phone_number:
          type: string
          maxLength: 128
        photo:
          type: string
          format: binary
      required:
      - email
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: E-mail address
          maxLength: 254
      required:
      - new_email
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
          title: E-mail address
          maxLength: 254
      required:
      - new_email

  responses:
    ValidationError:
      description: 'Ошибки валидации в стандартном формате DRF'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    NestedValidationError:
      description: 'Ошибки валидации в стандартном формате DRF, в том числе с внутренними элементами.'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/NestedValidationError'
              - $ref: '#/components/schemas/ValidationError'

    AuthenticationError:
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'

    PermissionDenied:
      description: Недостаточно прав
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionDenied'

    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'


  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
